#!/usr/bin/env python3
"""
dbcollect-multi - Script to generate dbcollect commands for multiple Oracle users

Prints a list of commands to run (as root) for running dbcollect with a separate user
for each dbcollect instance, as well as another one for only the OS data.

Run as you would run dbcollect, including parameters, then pipe to bash, for example:

(as root)
# check output
dbcollect_multi -o --force-awr 

# run sequentially
dbcollect_multi -o --force-awr | bash

Note there now will be multiple DBCollect ZIP files. We need all of them.

Copyright (c) 2025 - Bart Sjerps <bart@dirty-cache.com>
License: GPLv3+
"""

import sys, re, platform
from subprocess import run, PIPE

hostname = platform.uname()[1]
# dbcollect command for getting ONLY the OS data
dbc_sys  = sys.argv.copy()
dbc_sys.insert(1, '--no-ora')
print(' '.join(dbc_sys))

# dbcollect commands to get Oracle data per instance, using the correct user
r = run(['ps', '-eo','user,args'], universal_newlines=True, check=True, stdout=PIPE)
for user, sid in re.findall(r'(\w+)\s+ora_pmon_(.*)', r.stdout):
    dbc_ora = sys.argv.copy()
    dbc_ora.insert(1, sid)
    dbc_ora.insert(1, '--include')
    dbc_ora.insert(1, user)
    dbc_ora.insert(1, '--user')
    dbc_ora.insert(1, f'dbcollect_{hostname}_{sid}')
    dbc_ora.insert(1, '--filename')
    dbc_ora.insert(1, '--no-sys')
    print(' '.join(dbc_ora))

