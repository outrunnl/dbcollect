#!/usr/bin/env python
"""
download - download and install the latest release of dbcollect to /usr/local/bin

Script that can be run directly from github to install dbcollect.
Usage:
curl https://raw.githubusercontent.com/outrunnl/dbcollect/master/scripts/download | python

To keep things simple, there is only very basic exception handling.
Move the downloaded dbcollect to /usr/local/bin or $HOME/bin after downloading if
it didn't happen automatically.

Copyright (c) 2022 - Bart Sjerps <bart@dirty-cache.com>
License: GPLv3+
"""

import os, json, hashlib
try:
    from urllib2 import urlopen, Request, HTTPError
except ModuleNotFoundError:
    from urllib.request import urlopen, Request, HTTPError

apiurl = 'https://api.github.com/repos/outrunnl/dbcollect/releases/latest'

def retrieve(url):
    """Retrieve the raw data from a url"""
    request  = Request(url)
    response = urlopen(request)
    return response.read()

def save(data, path):
    print("-> Saving binary as {0}".format(path))
    with open(path,'wb') as f:
        f.write(data)
    print("-> Setting permissions to mode 755")
    os.chmod(path, 0o755)

def main():
    print("Github dbcollect downloader - download the latest dbcollect release")
    print("-> Retrieving GitHub metadata from {0}".format(apiurl))

    # Get the GitHub metadata (JSON) as dictionary
    info = json.loads(retrieve(apiurl))

    # Get url and version
    downloadurl = info['assets'][0]['browser_download_url']
    version     = info['tag_name'].lstrip('v')

    # Download the binary
    print("-> Downloading binary version {0} from {1}".format(version, downloadurl))
    binary = retrieve(downloadurl)

    # Print MD5 hash for verification
    hash = hashlib.md5()
    hash.update(binary)
    print("-> md5 hash: {0}".format(hash.hexdigest()))

    # Save binary
    try:
        save(binary, '/usr/local/bin/dbcollect')
    except:
        print("-> Saving binary as /usr/local/bin/dbcollect failed, retry current dir (move this to your $PATH)")
        save(binary, 'dbcollect')

try:
    main()
except Exception as e:
    # Catch any exception, print it and exit
    print(e)
    exit(10)
