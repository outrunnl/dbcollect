#!/usr/bin/env python
"""
download - download the latest release of dbcollect and save it on /usr/local/bin

Script that can be run directly from github to install dbcollect.
Usage:
curl https://raw.githubusercontent.com/outrunnl/dbcollect/master/scripts/download | python

To keep things simple, there is only very basic exception handling.
Runs as any user but asks for sudo permissions to move the binary to /usr/local/bin.

Copyright (c) 2020 - Bart Sjerps <bart@outrun.nl>
License: GPLv3+
"""

import os, json, hashlib
try:
    from urllib2 import urlopen, Request, HTTPError
except ModuleNotFoundError:
    from urllib.request import urlopen, Request, HTTPError

apiurl = 'https://api.github.com/repos/outrunnl/dbcollect/releases/latest'
target = '/tmp/dbcollect'

helptext = """
# Show help
dbcollect -h
# Version info
dbcollect -V
# Show package contents
unzip -v dbcollect
"""

def retrieve(url):
    """Retrieve the raw data from a url"""
    request  = Request(url)
    response = urlopen(request)
    return response.read()

def main():
    print("Github dbcollect downloader - download the latest dbcollect release")
    print("Retrieving GitHub metadata from {0}".format(apiurl))

    # Get the GitHub metadata (JSON) as dictionary
    info = json.loads(retrieve(apiurl))

    # Get url and version
    downloadurl = info['assets'][0]['browser_download_url']
    version     = info['tag_name'].lstrip('v')

    # Download the binary
    print("Downloading binary version {0} from {1}".format(version, downloadurl))
    binary = retrieve(downloadurl)

    # Print MD5 hash for verification
    hash = hashlib.md5()
    hash.update(binary)
    print("md5 hash: {0}".format(hash.hexdigest()))

    # Save binary
    print("Saving binary as {0}".format(target))
    with open(target,'wb') as f:
        f.write(binary)

    # Set permissions
    print("Setting permissions to mode 775")
    os.chmod(target, 0o755)

    # Move to /usr/local/bin using sudo
    print('Moving {0} to /usr/local/bin'.format(target))
    rc = os.system(r'sudo \mv {0} /usr/local/bin'.format(target))
    if rc:
        print("\nMoving failed, manually move {0} to /usr/local/bin".format(target))

    print(helptext)

try:
    main()
except Exception as e:
    # Catch any exception, print it and exit
    print(e)
    exit(10)
